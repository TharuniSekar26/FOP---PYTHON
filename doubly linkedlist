class Node:
    def __init__(self,data):
        self.data = data
        self.pre = None
        self.next = None
class DoublyLinkedList:
    def __init__(self):
        self.head = None
        self.tail = None
    def isEmpty(self):
        return self.head==None
    def insert(self,data):
        newNode = Node(data)
        if(self.isEmpty()): 
            self.head = newNode
            self.tail = newNode
        else:
            self.tail.next=newNode
            newNode.pre = self.tail
            self.tail = newNode
    def forwardDisplay(self):
        curr = self.head
        while(curr):
            print(curr.data,end=" ")
            curr = curr.next 
        print()
    def backwardDisplay(self):
        curr = self.tail
        while(curr):
            print(curr.data,end=" ")
            curr = curr.pre
        print()
    def deleteAtMiddle(self,ele):
        curr = self.head
        while(curr.next):
            if(curr.next.data==ele):
                curr.next = curr.next.next
                curr.next.pre = curr
                break
            curr=curr.next       
ll = DoublyLinkedList()
ll.insert(1)
ll.insert(2)
ll.insert(3)

ll.forwardDisplay()
ll.backwardDisplay()
ll.deleteAtMiddle(2)
ll.forwardDisplay()
